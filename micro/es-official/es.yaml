apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: cluster-test
spec:
  version: 7.6.2
  http:
    tls:
      selfSignedCertificate:  
        ## 取消默认的tls
        disabled: true
  nodeSets:
  ## master 节点 名称
  - name: master
    count: 1
    podTemplate:
      spec:
        volumes:
        - name: elasticsearch-data
          emptyDir: {}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
        - name: elasticsearch
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - /mnt/elastic-internal/scripts/readiness-probe-script.sh
            failureThreshold: 3
            initialDelaySeconds: 100
            periodSeconds: 12
            successThreshold: 1
            timeoutSeconds: 12
          env:
           ## jvm 内存
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          - name: READINESS_PROBE_TIMEOUT
            value: "10"
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 1000m
    config:
      ## 是不是master节点  ，节点这里可以看文档，一个节点既可以是master 也可以是 data 
      node.master: "true"
      node.data: "false"
      node.ingest: "false"
  - name: data
    count: 1
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100G
        ## 我定义的 sc
        storageClassName: managed-nfs-storage
    podTemplate:
      spec:
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        - name: increase-fd-ulimit
          securityContext:
            privileged: true
          command: ["sh", "-c", "ulimit -n 65536"]
        containers:
        - name: elasticsearch
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - /mnt/elastic-internal/scripts/readiness-probe-script.sh
            failureThreshold: 3
            initialDelaySeconds: 100
            periodSeconds: 12
            successThreshold: 1
            timeoutSeconds: 12
          env:
          - name: ES_JAVA_OPTS
            value: -Xms1g -Xmx1g
          - name: READINESS_PROBE_TIMEOUT
            value: "10"
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 1000m
    config:
      node.master: "false"
      node.data: "true"
      node.ingest: "true"
  http:
    service:
      spec:
        type: NodePort
